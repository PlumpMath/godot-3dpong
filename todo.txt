
plan for version 1.1:
	[x]- fix analog dead zone (properly this time!):  http://www.third-helix.com/2013/04/12/doing-thumbstick-dead-zones-right.html
	
	[x]- add screenshot hotkey
	
	- check which screenshots already exist, and choose another name (numbered) (or with date and time?) (maybe create a screenshot subdir in "user://" first?)
	
	- make 1080p screenshots using the hotkey and upload them to itch.io.
	
	- add preferences file that gets created on first run, containing:
		- stick dead zone (separate for pad 1 and 2?)
		- mouse sensitivity
		- gamepad sensitivity (separate for pad 1 and 2!!)
		- keyboard sensitivity
		- option for disabling the mouse capture workaround?
	~
	
	[x]- add version label to title screen
~

-----

[x]- make sound effects and add them. (how does sound work in godot? look at platformer demo)
	- we will need sound effects for the following things:
	
	[x] paddle_hit1 (lower pitched, for paddle 1) (C5)
	[x] paddle_hit2 (higher pitched, for paddle 2) (C6)
	[x] wall_hit (C4)
	block_hit (for breakout mode) (maybe multiple ones, depending on block color?)
~

#wip#- implement menus. (see doc/planned_features.txt)
	[x]- make menu cursor move
	[x]- make control options selectable
	[x]- use global variables to store the options
	[x]- read these global variables and setup the InputHandler scripts in the "Pong.gd" script
	[x]- use Node.replace_by() to replace the paddle's InputHandler node with one that has the appropriate script.
	
	[x]- load SingleScreen or SplitScreen scene depending on if Player 2 is an NPC.
	
	[x]- add name and credits to title screen!
	
	[x]- make a 3d logo? "3D Pong", swapping out the word "Pong" for "Breakout" when the player flips the game mode option. (and zooming out, because "Breakout" is longer than "Pong")
~

[x]- move "start game" to the top of the main menu! (so you can start the game with default settings by simply pressing A/start!

- check if I can score at least one point against each of the CPUs!

[x]- fix browser mouse controls. (how to check which platform we are running on?) -> with OS.get_name(). mouse capture seems to be broken in HTML5...

- search for "TODO" in all scripts!

[x]- write imperfect paddle AI scripts!

#wip#- implement the different InputHandler scripts (see doc/planned_features.txt)
	[x]- Mouse
	[x]- Keyboard_wasd
	[x]- keyboard_arrow_keys
	[x]- Gamepad1_left_stick  (d-pad will also work)
	[x]- Gamepad1_right_stick (face buttons will also work)
	[x]- Gamepad2_left_stick  (d-pad will also work)
	[x]- Gamepad2_right_stick (face buttons will also work)
	[x]- CPU_weak
	[x]- CPU_medium
	[x]- CPU_strong
	[x]- CPU_perfect
~


[x]- add fullscreen hotkey (F11) and quit via alt+F4. -> quit via alt+F4 should work as-is. but I added a (commented out) handler anyway.

- make breakout scene & multiple stage subscenes.


[x]- limit maximum angle of the ball to prevent it from taking a long time to reach the other side of the playing field.

[x]- fine-tune the MAX_ANGLE value in Ball.gd (limits the maximum angle of the ball)

[x]- joystick dead zone handling should be combined for both axis. (make them a Vector2 and check dead zone based on the vector's length) (make a test program for this first!) -> implemented it, but removing the dead zone from the vector's lenght isn't possible to do directly. Didn't get it to work right so I reverted it to the old dead zone handling method, where each axis is handled separately.

- try fixing the joystick dead zone handling again later?


- probably won't do this because it will be unnecessary after implementing the maximum angle limit:
- add 2 switchable physics modes for the ball (after implementing breakout, won't need to do double the scripting work that way):
	- "Realistic Mode": which does proper reflection calculations when the ball hits something (currently implemented as default.)
	
	- "Pong Mode": which ignores proper physics and simply handles all the axis' separately. (i.e.: collision on X axis -> velocity.X gets negated.)
~
